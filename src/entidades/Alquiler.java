// --------------------------------------------------------
// Code generated by Papyrus Java
// --------------------------------------------------------

package entidades;
import java.io.Serializable;
import java.util.*;

import miLibreria.objetos.Persona;
/************************************************************/
/**
 * 
 */
public class Alquiler implements Comparable<Alquiler>, Serializable{
	private static final long serialVersionUID = 123456234324167L;
	private String id;
	private Vehiculo vehiculo;
	private Empleado empleado;
	private Cliente cliente;
	private GregorianCalendar fechaIniAlquiler;
	private Oficina oficinaAlquiler;
	private Oficina oficinaDevolucion;
	private GregorianCalendar fechaFinPrevista;
	private Double alquilerPrevisto;
	private boolean finalizado;
	
	
	
	
	public boolean isFinalizado() {
		return finalizado;
	}


	public void setFinalizado(boolean finalizado) {
		this.finalizado = finalizado;
	}


	public Alquiler(String id, Vehiculo vehiculo, Empleado empleado, Cliente cliente,
			GregorianCalendar fechaIniAlquiler, Oficina oficinaAlquiler, Oficina oficinaDevolucion,
			GregorianCalendar fechaFinPrevista, Double alquilerPrevisto, boolean finalizado) {
		super();
		this.id = id;
		this.vehiculo = vehiculo;
		this.empleado = empleado;
		this.cliente = cliente;
		this.fechaIniAlquiler = fechaIniAlquiler;
		this.oficinaAlquiler = oficinaAlquiler;
		this.oficinaDevolucion = oficinaDevolucion;
		this.fechaFinPrevista = fechaFinPrevista;
		this.alquilerPrevisto = alquilerPrevisto;
		this.finalizado = finalizado;
	}


	public Double getAlquilerPrevisto() {
		return alquilerPrevisto;
	}


	public void setAlquilerPrevisto(Double alquilerPrevisto) {
		this.alquilerPrevisto = alquilerPrevisto;
	}



	
	public String getId() {
		String aux=this.id;
		return aux;
	}

	public void setId(String id) {
		String aux = id;
		this.id= aux;
	}

	public Vehiculo getVehiculo() {
		Vehiculo aux=this.vehiculo;
		return aux;
	}

	public Empleado getEmpleado() {
		Empleado aux=this.empleado;
		return aux;
	}

	public Cliente getCliente() {
		Cliente aux=this.cliente;
		return aux;
	}

	public GregorianCalendar getFechaIniAlquiler() {
		GregorianCalendar aux=this.fechaIniAlquiler;
		return aux;
	}

	public Oficina getOficinaAlquiler() {
		Oficina aux=this.oficinaAlquiler;
		return aux;
	}
	
	public Oficina getOficinaDevolucion() {
		Oficina aux=this.oficinaDevolucion;
		return aux;
	}

	public GregorianCalendar getFechaFinPrevista() {
		GregorianCalendar aux=this.fechaFinPrevista;
		return aux;
	}

	public void setVehiculo(Vehiculo vehiculo) {
		Vehiculo aux = vehiculo;
		this.vehiculo = aux;
	}

	public void setEmpleado(Empleado empleado) {
		Empleado aux = empleado;
		this.empleado= aux;
	}

	public void setCliente(Cliente cliente) {
		Cliente aux = cliente;
		this.cliente = aux;
	}

	public void setFechaIniAlquiler(GregorianCalendar fechaIniAlquiler) {
		GregorianCalendar aux = fechaIniAlquiler;
		this.fechaIniAlquiler = aux;
	}

	public void setOficinaAlquiler(Oficina oficina) {
		Oficina aux = oficina;
		this.oficinaAlquiler = aux;
	}

	public void setOficinaDevolucion(Oficina oficina) {
		Oficina aux = oficina;
		this.oficinaDevolucion = aux;
	}
	
	public void setFechaFinPrevista(GregorianCalendar fechaFinPrevista) {
		GregorianCalendar aux = fechaFinPrevista;
		this.fechaFinPrevista = aux;
	}
	
	@Override
	public int compareTo(Alquiler a) {
		int devolver;
		//si su id es igual devuelvo 0, si no ordeno por fecha
		if (this.getId()==a.getId()) {
			devolver = 0;
		}else devolver = this.getFechaIniAlquiler().compareTo(a.fechaIniAlquiler);
		
		return devolver;	
	}
	
	@Override
	public boolean equals(Object a) {
		boolean igual = false;
		Alquiler b= (Alquiler) a;
		
		if (b.compareTo(this)==0) igual = true;
		
		return igual;
    }

	@Override
	public String toString() {
		int mes = fechaIniAlquiler.get(Calendar.MONTH);
		int dia = fechaIniAlquiler.get(Calendar.DAY_OF_MONTH);
		int año = fechaIniAlquiler.get(Calendar.YEAR);
		
		return id +", Vehiculo : " + vehiculo.getMatricula()+", "+vehiculo.getMarca() +", "+vehiculo.getModelo()+", Alquilador por : "+ cliente.nombreCompleto() + ", Fecha alquiler : " + dia+"/"+mes+"/"+año+", Oficina :" + oficinaAlquiler.getDescripcion()+", "+oficinaAlquiler.getLocalidad() +", Precio previsto : "+vehiculo.calculaAlquilerPrevisto(this);
	}

}
