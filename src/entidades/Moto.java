// --------------------------------------------------------
// Code generated by Papyrus Java
// --------------------------------------------------------

package entidades;

import java.util.Calendar;
import java.util.GregorianCalendar;

/************************************************************/
/**
 * 
 */
public class Moto extends Electrico{
	private static final long serialVersionUID = 12342223125456267L;
	private int cilindrada;
	private TipoCarnet carnetRequerido;
	
	//precio por dia de alquiler
	private Double precioDiario = 10.00;

	public Double getPrecioDiario() {
		return precioDiario;
	}



	public void setPrecioDiario(Double precioDiario) {
		this.precioDiario = precioDiario;
	}



	/**
	 * Construcor completo de una Moto
	 * @param matricula String matriculo vehiculo.
	 * @param marca String marca vehículo.
	 * @param modelo String modelo vehículo.
	 * @param color String color vehículo.
	 * @param fechaAlta Calendar fecha de alta del vehículo en el concesionario.
	 * @param kms Int kilometros que lleva recorrido el vehículo.
	 * @param categoria Categoría categoria del vehículo.
	 * @param oficina Oficina donde se encuentra el vehículo.
	 * @param alquilado Boolean si está o no alquilado.
	 * @param consumo Double del consumo del vehicculo por km.
	 * @param potencia Int potencia del vehículo.
	 * @param nivel_emison String nivel de emision.
	 * @param cilindrada int con la cilindrada de la moto
	 * @param carnetRequerido String Carnet Requerido (B1, A2...ETC)
	 */
	public Moto(String matricula, String marca, String modelo, Color color, GregorianCalendar fechaAlta, int kms,
			Categoria categoria, Oficina oficina, boolean alquilado, int autonimia, int tiempoRecarga, int cilindrada,
			TipoCarnet carnetRequerido) {
		super(matricula, marca, modelo, color, fechaAlta, kms, categoria, oficina, alquilado, autonimia, tiempoRecarga);
		this.cilindrada = cilindrada;
		this.carnetRequerido = carnetRequerido;
	}



	public int getCilindrada() {
		int aux=this.cilindrada;
		return aux;
	}


	public TipoCarnet getCarnetRequerido() {
		TipoCarnet aux=this.carnetRequerido;
		return aux;
	}

	public void setCilindrada(int cilindrada) {
		int aux = cilindrada;
		this.cilindrada = aux;
	}

	public void setCarnetRequerido(TipoCarnet carnetRequerido) {
		TipoCarnet aux = carnetRequerido;
		this.carnetRequerido = aux;
	}
	
	@Override
	public String toString() {
		return super.toString()+", Cilindrada : " + cilindrada;
	}

	/**
	 * Calcula el precio total a pagar segun las fechas previstas.
	 * @param a Objeto Alquiler para coger las fechas.
	 * @return Precio del alquiler previsto.
	 */
	@Override
	public Double calculaAlquilerPrevisto(Alquiler a) {
		
		//consigo la diferencia de dias de la fecha de inicia y la de fin prevista
		int difDias = miLibreria.metodos.Fechas.difDiasEntreFechas(a.getFechaIniAlquiler(), a.getFechaFinPrevista());
		
		//calculo el precio total
		Double total = (difDias*precioDiario)+((difDias*precioDiario)*(super.getPorcentajeSubida()/100));
		
		return total;
	}
	
	/**
	 * Calcula el precio total a pagar segun las fechas reales.
	 * @param a Objeto Alquiler para coger las fechas.
	 * @param b Objeto Devolucion para coger las fechas.
	 * @return Precio del alquiler previsto.
	 */
	@Override
	public Double calculaAlquilerReal(Alquiler a, Devolucion b) {
		
		//consigo la diferencia de dias de la fecha de inicia y la de fin prevista
		int difDias = miLibreria.metodos.Fechas.difDiasEntreFechas(a.getFechaIniAlquiler(), b.getFechaDevolucionReal());
		
		//calculo el precio total
		Double total = (difDias*precioDiario)+((difDias*precioDiario)*(super.getPorcentajeSubida()/100));
		
		return total;
	}
}
